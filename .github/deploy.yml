# Note this is sample GHA example for CI CD setup

name: CI/CD Pipeline 

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: super-service
  IMAGE_TAG: latest
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: my-eks-cluster
  RELEASE_NAME: super-service
  NAMESPACE: default

jobs:
  docker:
    name: Build, Scan & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: docker build -t $DOCKERHUB_USERNAME/$IMAGE_NAME:$IMAGE_TAG ./src/super-service

      - name: Run Trivy Security Scan
        uses: aquasecurity/trivy-action@v0.13.1
        with:
          image-ref: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: 'os,library'

      - name: Push Docker Image
        run: docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:$IMAGE_TAG

  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: docker
    environment:
      name: production
      url: https://example.com

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.4.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  helm:
    name: Deploy via Helm to EKS
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.2

      - name: Deploy with Helm
        run: |
          helm upgrade --install $RELEASE_NAME ./helm/super-service \
            --namespace $NAMESPACE \
            --create-namespace \
            --set image.repository=$DOCKERHUB_USERNAME/$IMAGE_NAME \
            --set image.tag=$IMAGE_TAG
